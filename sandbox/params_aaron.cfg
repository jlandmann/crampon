# Configuration file for OGGM parameters

### Input/Output paths. Set to ~ to default to home directory

# Where OGGM will write its output
working_dir = '/scratch-fourth/acremona/modelruns/CH'

# General directory where data are stored
data_dir = '/scratch-fourth/acremona/crampon/data'

# Users can specify their own topography file if they want to. In this case,
# the topo_dir above will be ignored. This is useful for testing, or if you
# are simulating a single region with better data.
# the empty default is what most users should do
dem_file = '/scratch-fourth/acremona/crampon/data/DEM/SWISSALTI3D_2020/swissALTI3D_2020_bil10m_LV95_LN02.tif'
# height file to reference the meteo data on
hfile = '/scratch-fourth/acremona/crampon/data/DEM/hgt.nc'

rgi_version = 5

# Path to the climate file
climate_file = '/scratch-fourth/acremona/crampon/data/meteo/climate_all.nc'
nwp_file_cosmo = '/scratch-fourth/acremona/crampon/data/meteo/cosmo_predictions.nc'
nwp_file_ecmwf = '/scratch-fourth/acremona/crampon/data/meteo/ecmwf_predictions.nc'
climate_dir = '/scratch-fourth/acremona/crampon/data/meteo/'

# Path to National Forest Inventory DEMs (Provided by Christian Ginzler)
lfi_dir = '\\\\speedy11-12-fs.wsl.ch\data_15\_PROJEKTE\Swiss_Glacier'
lfi_worksheet = '/scratch-fourth/acremona/crampon/data/meteo/ginzler_ws.shp'

# path to the firncore measurements
firncore_dir = '/scratch-fourth/acremona/crampon/data/firncores/'

# Path to other DEMs (DHM25 (1961-1991), Swissalti3d)
dem_dir = '/scratch-fourth/acremona/crampon/data/DEM'

# Path to glaciologically measured MBs
mb_dir = '/scratch-fourth/acremona/crampon/data/MB/'

# path to debris files
debris_fp = '/scratch-fourth/acremona/crampon/data/debris/'
debris = True

# Debris reduction Factor
DF = 0.6

# Directories where to copy some model run backups to
# Of connection to backup dir one fails, we try backup_dir two
#'Z:\landmann\modelrun_backups\per_glacier'
modelrun_backup_dir_1 = None
modelrun_backup_dir_2 = None


# Path to a .csv file containing links between the RGI and the WGMS
# Note that the MB data ships with OGGM, so that keeping this parameter to
# the empty default is what most users should do
wgms_rgi_links =

# Path to a .csv file containing links between the RGI and the GlaThiDa
# Note that the GlaThiDa data ships with OGGM, so that keeping this parameter
# to the empty default is what most users should do
glathida_rgi_links =

# Path to a .csv file containing links between the RGI and the Leclercq data
# Note that the Leclercq data ships with OGGM, so that keeping this parameter
# to the empty default is what most users should do
leclercq_rgi_links =

# GLAMOS glaciers

glamos_ids = RGI50-11.A10G05, RGI50-11.B5614n, RGI50-11.B5616n-1, RGI50-11.B4312n-1,RGI50-11.A55F03,RGI50-11.B4504, RGI50-11.C1410,RGI50-11.E2320n,RGI50-11.E2316,RGI50-11.A51E08,RGI50-11.A50D01,RGI50-11.B1601,RGI50-11.B2201,RGI50-11.A50I19-4,RGI50-11.A51E12,RGI50-11.B5232,RGI50-11.B5229,RGI50-11.B5263n,RGI50-11.B3626-1

# Run period. Set to 0, 0 for the default (the entire available data space)
# Note that this will also have an influence on the mb data available for
# calibration!
run_period = 0, 0

# Consider the glacier divides?
use_divides = True

# Consider the glacier intersects?
use_intersects = True

# Multiprocessing
use_multiprocessing = True
# Number of processors to use (-1 = all available)
mp_processes = 5
use_mp_spawn = False

# Continue on error?
continue_on_error = True

# Skip the entity tasks which have already been applied?
# It is set to False per default but can be set to True for operational runs
# (works only for entity tasks)
auto_skip_task = False

# Use compression for the intermediate pickles? (might slow down I/O a bit)
# Both the performance loss (0% ?) and the space gain (-10%) seem to be low
use_compression = True

# Store shapefiles in glacier directories as .tar files instead of the multiple
# files format? If use_compression is True, use tar.gz instead.
use_tar_shapefiles = False

# MPI recv buffer size
# If you receive "Message truncated" errors from MPI, increase this
mpi_recv_buf_size = 131072

dl_verify = True
lru_maxsize = 100

### TIME parameters
# Tell when the hydrological budget year shall begin
bgmon_hydro = 10
bgday_hydro = 1

### CENTERLINE determination

# Decision on grid spatial resolution for each glacier
grid_dx_method = 'square'
# 'fixed': dx (meters) = fixed_dx
# 'linear':  dx (meters) = d1 * AREA (km) + d2 ; clipped to dmax (e.g.: 5, 10, 200)
# 'square':  dx (meters) = d1 * sqrt(AREA) (km) + d2 ;  clipped to dmax (e.g.: 20, 10, 200)
d1 = 10.
d2 = 10.	# it was set to 8
dmax = 50.	# it was set to 20
fixed_dx = 10.

# Which algorithm to use for interpolating the topography to the local grid
# 'bilinear' or 'cubic'
topo_interp = bilinear

# Grid border buffer around the glacier (for crampon: in meters!!!!)
# Make it large if you want to do past simulations.
border = 750


# For tidewater glaciers it doesn't make sense to have large maps
# if for some reason you still want this, set to false
clip_tidewater_border = True

# The glacier area, CenLon and CenLat are usually taken from the RGI
# shapefile, which is a good thing for default RGI files. If you use your
# own inventory, however, it might be a good idea to let OGGM compute these
# attributes at runtime: set to `False` in this case.
use_rgi_area = True
# Head determination: (approx) size in meters of the half-size window
# where to look for maximas
localmax_window = 500.

# DEM smoothing: (approx) size in meters of the smoothing window.
# Set to 0 for no smoothing
smooth_window = 0.
#251.
# Use multiple flowlines?
use_multiple_flowlines = True
# Kienholz et al eq (1)
q1 = 2e-6
q2 = 500.
rmax = 1000.

# Kienholz et al eq (2)
f1 = 1000.
f2 = 3000.
a = 4.25
b = 3.7

# Kienholz et al eq (8) but modified here
# Buffer in pixels where to cut the incoming centerlines
kbuffer = 2.5

# For water-terminating glaciers, use the percentile instead of minimum h?
# Set to zero if no special treatment for water terminating glaciers should be
# used, and to an integer > 0 to specify the percentile
terminus_search_percentile = 10
terminus_search_altitude_range = 100

### FLOWLINES definition parameters
# Grid spacing of a flowline in pixel coordinates
flowline_dx = 2
# Number of pixels to arbitrarily remove at junctions
flowline_junction_pix = 3
# Gaussian smooth of the altitude along a flowline
# sigma, in pixel coordinates (sigma=1 -> smooth around a -4:+4 window)
flowline_height_smooth = 1
# Prevent too small slopes? (see also min_slope param below)
filter_min_slope = True

### CATCHMENT WIDTHS computation parameters
# altitude range threshold for filtering
# This stuff has not been really optimized, it's also not very critical
width_alt_range_thres = 250.
# Minimum number of elements per bin for altitude-binsize definition
min_n_per_bin = 1
# Baseline binsize for the altitude-area distribution
base_binsize = 50.
# Smoothing of the widths afer altitude-area matching? 0 means no smoothing,
# 1 means default (i.e. kernel size 9).
smooth_widths_window_size = 0

### POTENTIAL RADIATION parameters
# extra border in meters around glacier for topographic shading calculation
shading_border = 10000
# factor to reduce glacier grid resolution for radiation calculation
# (1 might be expensive!)
reduce_rgrid_resolution = 0.1

### CLIMATE params
# SIS is not operational yet
sis_delivery_delay = True
# Baseline climate is the reference climate data to use for this workflow.
# Options include CRU, HISTALP, ERA5, ERA5L, CERA+ERA5, CERA+ERA5L
# Leave empty if you want to do your own cuisine.
baseline_climate = CRU
hydro_month_nh = 10
hydro_month_sh = 4

### CLIMATE params
# specify here the start and end year where oggm will searh for tstar
# candidates (note that the window will be reduced by mu_star_halfperiod on
# each side of the window). Set to 0, 0 for the default (the entire available
# data space)
tstar_search_window = 0, 0
mu_star_halfperiod = 15
use_bias_for_run = True
ref_mb_valid_window = 0, 0
# For reference glaciers, t* can be searched according to the glacier-wide mu
# or the per-flowline mu. The latter is more accurate, but also much slower.
# Default is fast but slightly less accurate.
tstar_search_glacierwide = True
# How big shall the edge of the window be that is used for temperature gradient
# calculation? If 0, use the temp_default_gradient.
temp_use_local_gradient = True
temp_use_local_gradient_cells = 5
temp_default_gradient = -0.0065
# the linear regression can lead to quite astonishing results... this helps
# you to crop them to more realistic values:
# todo:this should also allow no restrictions (the gradient are quite nice in meteoSwiss data) -0.01, 0.
temp_local_gradient_bounds = -10.0, 10.0
# method how to determine solid precipitation ratio('linear' between to
# temperatures defined below or 'magnusson' after Magnusson (2017)).
precip_ratio_method = 'linear'
# parameters for linear method
temp_all_solid = 0.
temp_all_liq = 2.
temp_melt = 0.
# precipitation gradient (m-1)
prcp_use_local_gradient = 5
prcp_default_gradient = +0.0002
# bounds derived from correlation between precip and precip grad:
# outlier only when precipitation is very low.
prcp_local_gradient_bounds = -0.01, 0.05
# precipitation correction (old OGGM parameter):
#   - set to a float for a constant scaling factor
#   - set to 'stddev' for a unique factor computed to minimize the
#     bias in inter-annual standard deviation for all reference glaciers
#     (recommended)
#   - set to 'stddev_perglacier' for a factor computed to minimize the
#     bias in inter-annual standard deviation for each glacier independantly
#     (the scaling factor is then interpolated for glaciers without mb data)
prcp_scaling_factor = stddev
# Tmax and Tmin are only available from 1971, so we can't use it before 1972
tminmax_available = 1972

# MASS BALANCE
# begin day/month of budget year
begin_mbyear_month = 10
begin_mbyear_day = 1

# Ratio of mu_snow to mu_ice in the BraithwaiteModel
ratio_mu_snow_ice = 0.5
# Ratio of a_snow to a_ice in HockModel
# todo: not yet implemented
ratio_a_snow_ice = 0.8

# ALBEDO
# the albedo update method
albedo_method = 'brock'
ice_albedo_default = 0.3
# maybe not meaningful, but needed for initiating GlacierALbedo
snow_albedo_default = 0.6
# accumulated daily maximum temperature (Brock model) for ice
tacc_ice = 4100.  # random value over 15 years

# SNOW AND FIRN PARAMETERS
# Minimum density for fresh snow (kg m-3, we choose 100 as default, because of
# daily time steps)
rho_min_snow = 100.
# density of snow assumed after one day (kg m-3)
rho_fresh_snow = 150.
# density threshold between snow and firn (kg m-3)
snow_firn_threshold = 550.
# pore closeoff density (kg m-3)
pore_closeoff = 845.
# we sometime need to assume a summer/autumn snow density
autumn_snow_density_guess = 550.

# ASSIMILATION parameters
# Error (as standard deviation) for manual dh readings, e.g. with Holfuy
# cameras (m)
dh_obs_manual_std_default = 0.015

# standard deviation for potential irradiation
ipot_sigma = 15.
sis_sigma = 15.
#
n_particles = 10000
#param_prior_distshape = 'gauss'
#param_prior_std_scalefactor = [1.0, 1.0, 1.0, 1.0]
#generate_params = 'past'
#param_dict = None
n_phys_vars = 6
n_aug_vars = 4
# indices state: 0= MB, 1=alpha, 2=m, 3=swe, 4:tacc, 5:=params
mod_ix = 0
mb_ix = 1
alpha_ix = 2
swe_ix = 3
tacc_ix = 4
obs_init_mb_ix = 5
theta_start_ix = 6
phi = 0.1
gamma = 0.05
model_error_mean = 0.
model_error_std = 0.0
theta_memory = 0.9  # the model parameter memory parameter
obs_std_scale_fac = 1.0
#param_method = 'memory'  # other 'liu'
#param_random_walk = False
#evolve_params = True

# SOME OLD OGGM PARAMETER
# Should we use the default, pre-calibrated reference tstars or are we
# running the calibration ourselves? The default should be False, which
# raises a warning when trying to calibrate.
run_mb_calibration = True

climate_qc_months = 3
clip_mu_star = False
# Do you want to consider sliding when inverting?
invert_with_sliding = False
# Some glacier geometries imply that some tributaries have a negative
# mass flux, i.e. zero thickness. One can correct for this effect, but
# this implies playing around with the mass-balance...
correct_for_neg_flux = True

filter_for_neg_flux = False

compress_climate_netcdf = True

calving_line_extension = 30
use_kcalving_for_inversion = True
use_kcalving_for_run = True
calving_use_limiter = True

# Do you want to optimize thickness or volume RMSD?
optimize_thick = False
# Do you actually want to optimize the parameters at all?
optimize_inversion_params = True
# If false, tell OGGM which should be used
inversion_glen_a = 2.4e-24
inversion_fs = 0.
use_inversion_params_for_run = True

### FLOWLINE MODEL params
# Which period you want to run?
y0 = 1990
y1 = 2003

# Which flowline params?
# Set to True to use the params obtained from the inversion.
use_optimized_inversion_params = False
# Default ice params
flowline_glen_a = 2.4e-24
flowline_fs = 0.


# Do you want to use shape factors to account for lateral drag?
# Allowed is empty, "Adhikari", "Nye" (equivalent to "Adhikari") or "Huss"
use_shape_factor_for_inversion =

### FLOWLINE MODEL params
# below this threshold bedshapes are considered trapezoidal
mixed_min_shape = 0.001
default_parabolic_bedshape = 0.003
# Do you want to use shape factors to account for lateral drag?
# Allowed is empty, "Adhikari", "Nye" (equivalent to "Adhikari") or "Huss"
# Trapezoidal bed shape is not yet taken into consideration and also the
# inflows of tributaries
use_shape_factor_for_fluxbasedmodel =
# Sometimes the parabola fits in flat areas are very good, implying very
# flat parabolas. This sets a minimum to what the parabolas are allowed to be
# This value could need more tuning
downstream_min_shape = 0.0001
# Angle defining the trapezoid bed shapes
# https://docs.oggm.org/en/latest/ice-dynamics.html#bed-shapes
# Lambda = 1 means an angle of 63° (so quite steep)
# Lambda = 2 means an angle of 45°
trapezoid_lambdas = 1
# Numerics and time stepping options
# Factor to to us in the CFL criterion to choose the time step
# (should be much smaller than 1). 0.02 is good, but 0.01 is more stable
# (a bit slower)
cfl_number = 0.02
# Time step threshold (in seconds): the numerical model will raise an error
# if the adaptive time step falls below that value
cfl_min_dt = 60
# Allow the glacier to grow larger than domain?
error_when_glacier_reaches_boundaries = True
# Glacier length computation
# Glacier "length" is not as unambiguously done as glacier volume or area
# Our defaults might not be the best for your use case. Here we provide
# some options to the user.
# This option sets an arbitrary limit on how thick (m) a glacier should be
# to be defined as "glacier" (https://github.com/OGGM/oggm/issues/914)
#min_ice_thick_for_length = 0
# How to calculate the length of a glacier?
# - 'naive' (the default) computes the length by summing the number of
#   grid points with an ice thickness above min_ice_thick_for_length
# - 'consecutive' computes the length by summing the number of grid
#   points that are dynamically connected to the top of the glacier
# 'consecutive' better corresponds to what we would intuitively
# define as glacier length, but it can create large steps in the
# length record in melt scenarios where the tongue gets disconnected
# (dead ice) or when tributaries are providing ice to the
# main branch at lower altitudes than the main branch's ice flow.
glacier_length_method = naive


### Tidewater glaciers options

# What is considered a "tidewater glacier" for the model runs, etc?
# 1: Marine-terminating
# 2: Marine-terminating, Shelf-terminating
# 3: Marine-terminating, Lake-terminating
# 4: Marine-terminating, Lake-terminating, Shelf-terminating
tidewater_type = 2

# Should we switch on the k-calving parameterisation for tidewater glacie
# calving constant of proportionality k after Oerlemans and Nick (2005)
# units yr-1. This one is for the ice thickness inversion
# Oerlemans and Nick (2005) use 2.4 yr-1, but qualitative tests and
# Recinos et al., (2019) indicate that is should be much smaller.
# We set it to 0.6 according to Recinos et al 2019 for a start
#inversion_calving_k = 0.6
# And this one is for the forward model
#calving_k = 0.6
# Should we use a flux limiter for the calving model? It creates
# quite high frontal thicknesses, but helps to keep the numerics stable
# Limit the front slope to a fraction of the calving front. "3" means 1/3.
# Setting to 0 limits the max slope to read sea-level.
#calving_limiter_frac = 0
# Sometimes DEMs are bad, and the glacier terminus has unrealistic
# heights: this defines min and max bounds for the glacier free board
# during the thickness inversion, i.e. how far it can reach out of water (in m)
# The DEM and flowlines won't be changed, but the water level will be
# artificially changed and kept throughout the simulation
free_board_marine_terminating = 10, 50
# For lake terminating glaciers, we have no way to know the water level,
# so we set an arbitrary free board value
free_board_lake_terminating = 10
# We extend the calving glaciers by an arbitrary number of grid points,
# and following an arbitrary slope.
# How many grid points should we extend the calving front with?
# What is the slope of the ocean floor there? Defined as tan alpha, i.e
# deepening / distance (example 0.1: deepening of 100m over 1000m)
calving_front_slope = 0.05

# physical variable boundaries

# albedo
# the values come from from Brock et al. (2000) / Cuffey and Paterson (2010)
# todo: the values might be bullshit
alpha_bounds = 0.2, 0.85

# snow water equivalent
swe_bounds = 0.0, None

# accumulated maximum temperature
tacc_bounds = 0.0, None
